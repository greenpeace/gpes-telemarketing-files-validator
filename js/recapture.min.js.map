{"version":3,"sources":["js/recapture.js"],"names":["$","on","hide","text","css","ext","val","split","pop","toLowerCase","inArray","alert","parse","config","header","complete","results","file","uniqueContent","JSON","stringify","data","hashedUniqueContent","sha1","recaptureFileValidator","checkFields","meta","fields","show","html","tlmkValidator","arrayToHtmlList","errorsInRecordS","n","clean","length","hasOwnProperty","checkCsvData"],"mappings":"AAGAA,EAAE,UAAUC,GAAG,SAAS,WACtBD,EAAE,gCAAgCE,OAClCF,EAAE,6BAA6BG,KAAK,QAEtCH,EAAE,WAAWC,GAAG,SAAS,WACvBD,EAAE,UAAUI,IAAI,SAAU,YAC1B,IAAIC,EAAML,EAAE,UAAUM,MAAMC,MAAM,KAAKC,MAAMC,eAEb,GAA5BT,EAAEU,QAAQL,EAAK,CAAC,SAClBL,EAAE,gCAAgCE,OAClCS,MAAM,6GACNX,EAAE,UAAUI,IAAI,SAAU,YAE1BJ,EAAE,oBAAoBY,MAAM,CAC1BC,OAAQ,CACNC,QAAQ,EACRC,SAAU,SAAUC,EAASC,GAC3BjB,EAAE,gCAAgCE,OAIlC,IAAIgB,EAAgBC,KAAKC,UAAUJ,EAAQK,MACvCC,EAAsBC,KAAKL,GAG/B,GAFAlB,EAAE,aAAaG,KAAKmB,IAE4C,IAA5DE,uBAAuBC,YAAYT,EAAQU,KAAKC,QAClD3B,EAAE,iBAAiB4B,OACnB5B,EAAE,kBAAkBG,KAAK,KACzBH,EAAE,mBAAmB6B,KAAKC,cAAcC,gBAAgBP,uBAAuBG,SAC/E3B,EAAE,qBAAqB6B,KAAKC,cAAcC,gBAAgBf,EAAQU,KAAKC,aAClE,CAEL,IAAIK,EAAkB,GAItB,IAAK,IAAIC,KAHTjB,EAAUc,cAAcI,MAAMlB,GAC9BhB,EAAE,kBAAkBG,KAAKa,EAAQK,KAAKc,QAExBnB,EAAQK,KAChBL,EAAQK,KAAKe,eAAeH,KAC9BD,GAAoCR,uBAAuBa,aAAaJ,EAAGjB,EAAQK,KAAKY,KAIxFD,EAAgBG,QAAU,IAC5BnC,EAAE,qBAAqBG,KAAK6B,GAC5BhC,EAAE,iBAAiB4B,QAIvB5B,EAAE,UAAUI,IAAI,SAAU,aAG9BW,SAAU","file":"recapture.min.js","sourcesContent":["/* jshint browser: true,  esversion: 6 */\n\n/* global $, alert, sha1, tlmkValidator, recaptureFileValidator */\n$(\"#clear\").on(\"click\", function () {\n  $(\"#errorHeaders, #errorRecords\").hide();\n  $(\"#recordsNumber, #fileHash\").text(\" \");\n});\n$('#submit').on('click', function () {\n  $(\"button\").css(\"cursor\", \"progress\");\n  var ext = $('#files').val().split('.').pop().toLowerCase();\n\n  if ($.inArray(ext, ['csv']) == -1) {\n    $(\"#errorHeaders, #errorRecords\").hide();\n    alert(\"O no has elegido un fichero o tienes una extensión de fichero inválida. Tienes que elegir un fichero .csv\");\n    $(\"button\").css(\"cursor\", \"pointer\");\n  } else {\n    $('input[type=file]').parse({\n      config: {\n        header: true,\n        complete: function (results, file) {\n          $(\"#errorHeaders, #errorRecords\").hide(); // console.log('This file done:', file);\t\t\t\t\t\n          // console.log(results.data);\n          // console.log(results.meta.fields);\n\n          var uniqueContent = JSON.stringify(results.data);\n          var hashedUniqueContent = sha1(uniqueContent);\n          $(\"#fileHash\").text(hashedUniqueContent); // Check header fields and if they are not correct, display diferences.\n\n          if (recaptureFileValidator.checkFields(results.meta.fields) !== true) {\n            $(\"#errorHeaders\").show();\n            $(\"#recordsNumber\").text(\" \");\n            $(\"#correctHeaders\").html(tlmkValidator.arrayToHtmlList(recaptureFileValidator.fields));\n            $(\"#headersInTheFile\").html(tlmkValidator.arrayToHtmlList(results.meta.fields));\n          } else {\n            // Parse csv body rows\n            var errorsInRecordS = \"\";\n            results = tlmkValidator.clean(results);\n            $(\"#recordsNumber\").text(results.data.length);\n\n            for (var n in results.data) {\n              if (results.data.hasOwnProperty(n)) {\n                errorsInRecordS = errorsInRecordS + recaptureFileValidator.checkCsvData(n, results.data[n]);\n              }\n            }\n\n            if (errorsInRecordS.length >= 1) {\n              $(\"#errorRecords pre\").text(errorsInRecordS);\n              $(\"#errorRecords\").show();\n            }\n          }\n\n          $(\"button\").css(\"cursor\", \"pointer\");\n        }\n      },\n      complete: function () {// console.log('All files done!');\n      }\n    });\n  }\n});"]}